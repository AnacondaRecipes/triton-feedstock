diff --git a/CMakeLists.txt b/CMakeLists.txt
index d0d361fc7..180745c47 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -7,9 +7,9 @@ set(CMAKE_INCLUDE_CURRENT_DIR ON)
 
 project(triton)
 include(CTest)
-if(NOT WIN32)
-  list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
-endif()
+# if(NOT WIN32)
+#   list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
+# endif()
 
 # Options
 option(TRITON_BUILD_TUTORIALS "Build C++ Triton tutorials" ON)
@@ -36,7 +36,8 @@ endif()
 include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
 
 # Third-party
-include_directories(${PYBIND11_INCLUDE_DIR})
+# include_directories(${PYBIND11_INCLUDE_DIR})
+find_package(pybind11 REQUIRED)
 
 if(WIN32)
     SET(BUILD_SHARED_LIBS OFF)
diff --git a/python/setup.py b/python/setup.py
index 2ac3accd2..bfaa015e8 100644
--- a/python/setup.py
+++ b/python/setup.py
@@ -161,7 +161,7 @@ class CMakeBuild(build_ext):
         lit_dir = shutil.which('lit')
         triton_cache_path = os.path.join(os.environ["HOME"], ".triton")
         # lit is used by the test suite
-        thirdparty_cmake_args = get_thirdparty_packages(triton_cache_path)
+        # thirdparty_cmake_args = get_thirdparty_packages(triton_cache_path)
         extdir = os.path.abspath(os.path.dirname(self.get_ext_fullpath(ext.path)))
         # create build directories
         if not os.path.exists(self.build_temp):
@@ -177,9 +177,10 @@ class CMakeBuild(build_ext):
             "-DCMAKE_VERBOSE_MAKEFILE:BOOL=ON",
             "-DPYTHON_INCLUDE_DIRS=" + python_include_dir,
         ]
-        if lit_dir is not None:
-            cmake_args.append("-DLLVM_EXTERNAL_LIT=" + lit_dir)
-        cmake_args.extend(thirdparty_cmake_args)
+        # cmake_args.extend()
+        # if lit_dir is not None:
+        #     cmake_args.append("-DLLVM_EXTERNAL_LIT=" + lit_dir)
+        # cmake_args.extend(thirdparty_cmake_args)
 
         # configuration
         cfg = get_build_type()
@@ -200,7 +201,7 @@ class CMakeBuild(build_ext):
         subprocess.check_call(["cmake", "--build", "."] + build_args, cwd=self.build_temp)
 
 
-download_and_copy_ptxas()
+# download_and_copy_ptxas()
 
 setup(
     name="triton",
