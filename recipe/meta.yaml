{% set version = "2.3.0" %}
# Set to "None" for usual release builds
{% set release_branch = "release/2.3.x" %}

package:
  name: triton
  version: {{ version }}

source:
{% if release_branch != None %}
  git_url: https://github.com/openai/triton.git
  git_rev: {{ release_branch }}
{% else %}
  url: https://github.com/openai/triton/archive/refs/tags/v{{ version }}.tar.gz
{% endif %}
  sha256: 19b6de0d0bcce86e973258d112169cd321b677146808bcc5fed7f69046775cfd
  patches:
    - patches/0001-do-not-package-third_party-folder.patch
    #- patches/0003-properly-point-to-triton-includes.patch
    #- patches/0004-Avoid-using-outdated-FindLLVM.patch
    - patches/0005-Unvendor-third-party-libs.patch
    #- patches/0007-Fix-TableGen-issues.patch
    - patches/0008-Search-for-libs-in-CONDA_PREFIX-instead-of-third_par.patch
    - patches/0009-unpack-llvm-within-env.patch

build:
  number: 4
  # Triton only currently supports linux, and is a GPU optimization tool.
  # We only have a linux-64 GPU builder at the moment.
  # It's primarily for PyTorch, and they only use it for linux-64/GPU.
  skip: true  # [not (linux and x86_64)]
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - make
    - cmake
    - ninja
    {% if release_branch %}
    - git
    {% endif %}
  host:
    - python
    - pybind11
    - pip
  run:
    - python
    - filelock
    - numpy
    - lit
    # provides cuobjdump and nvdisasm
    - cuda-cuobjdump
    # provides libdevice
    - cuda-nvvm-tools
    # provides ptxas
    - cuda-nvcc-tools
    - zlib

test:
  imports:
    - triton
    - triton._C.libtriton
  requires:
    - pip
    - pytest
    - scipy
  source_files:
    - python/test
  commands:
    - pip check
    # test suite essentially depends on availability of a physical GPU,
    # see https://github.com/openai/triton/issues/466;
    # Note that the test suite makes heavy use of PyTorch, for which Triton is a
    # dependency. So, you need to build Triton, then build PyTorch, then run these tests
    # again.
    - pytest -v python/test

about:
  home: https://github.com/openai/triton
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Development repository for the Triton language and compiler
  description: |
    This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.
    The aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.
  doc_url: https://triton-lang.org/
  dev_url: https://github.com/openai/triton

extra:
  recipe-maintainers:
    - erip
    - h-vetinari
