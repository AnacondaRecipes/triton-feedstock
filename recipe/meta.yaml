{% set version = "2.0.0" %}

package:
  name: triton
  version: {{ version }}

source:
  url: https://github.com/openai/triton/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 19b6de0d0bcce86e973258d112169cd321b677146808bcc5fed7f69046775cfd
  
build:
  number: 0
  # Currently we need this to support PyTorch's torch.compile feature on Nvidia GPUs, and this is the only platform we
  # support for that.
  skip: true  # [not (linux and x86_64)]
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
  script: pip install . --no-deps --no-build-isolation --ignore-installed --no-cache-dir -vv

requirements:
  build:
    - {{ compiler('cxx') }}
    - make
    - cmake
  host:
    - cudatoolkit {{ cuda_compiler_version }}*
    - python
    - pip
    - llvmdev 11
    - zlib
  run:
    - python
    - filelock
    - pytorch
    - lit

test:
  imports:
    - triton
    - triton._C.libtriton
  requires:
    - pip
    - pytest
    - scipy
  source_files:
    - python/test
  commands:
    - pip check
    # test suite essentially depends on availability of a physical GPU,
    # see https://github.com/openai/triton/issues/466;
    # so this package needs to be built and tested on a GPU builder
    - pytest -v python/test

about:
  home: https://github.com/openai/triton
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'Development repository for the Triton language and compiler'
  description: |
    This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.
    The aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.
  doc_url: https://triton-lang.org/
  dev_url: https://github.com/openai/triton

extra:
  recipe-maintainers:
    - erip
    - h-vetinari
